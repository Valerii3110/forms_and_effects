import './App.css';
import Form from '../Form/Form';
import FormActions from '../Form_actions/Form_actions';
import OrderForm from '../OrderForm/OrderForm';
import SearchForm from '../SearchFor/SearchFor';
import { useState } from 'react';
import type { Article } from '../../types/article';
import ArticleList from '../Article/ArticleList';
//* 1. –Ü–º–ø–æ—Ä—Ç—É—î–º–æ HTTP-—Ñ—É–Ω–∫—Ü—ñ—é
import { fetchArticles } from '../../services/articleService';

// import { Circles } from 'react-loader-spinner';

// function App() {
//   const handleOrder = (data: string) => {
//     console.log('Order resived form:', data);
//   };

//   const [articles, setArticles] = useState<Article[]>([]);

//   const handleSearch = async (topic: string) => {
//     const response = await axios.get<ArticlesHttpResponse>(
//       `https://hn.algolia.com/api/v1/search?query=${topic}`
//     );
//     console.log(response.data);
//     setArticles(response.data.hits);
//   };

//   return (
//     <>
//       <Form />
//       <hr />
//       <hr />
//       <hr />
//       <FormActions />
//       <hr />
//       <hr />
//       <hr />
//       <h1>Place you order</h1>
//       <OrderForm onSubmit={handleOrder} />
//       <hr />
//       <hr />
//       <hr />
//       <SearchForm onSubmit={handleSearch} />
//       {articles.length > 0 && <ArticleList items={articles} />}
//     </>
//   );
// }

//* –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∑–∞ —É–º–æ–≤–æ—é ({articles.length > 0 && ...}) –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ App. –°–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ArticleList –∑–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫, —è–∫—â–æ –π–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä—è—Ç—å. –¢–æ–±—Ç–æ –ª–æ–≥—ñ–∫–∞ "–ø–æ–∫–∞–∑–∞—Ç–∏ —á–∏ –Ω—ñ" ‚Äì —Ü–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å App, –∞ –Ω–µ ArticleList

//! –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è

//* –ü–æ–∫–∏ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è HTTP-–∑–∞–ø–∏—Ç, —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ ‚Äì –ø–æ—Ä–æ–∂–Ω—î –º—ñ—Å—Ü–µ, —â–æ –≤–∏–≥–ª—è–¥–∞—î —è–∫ –ø–æ–º–∏–ª–∫–∞ –∞–±–æ –∑–∞–≤–∏—Å–∞–Ω–Ω—è. –©–æ–± —Ü—å–æ–≥–æ —É–Ω–∏–∫–Ω—É—Ç–∏, –ø–æ–∫–∞–∑—É—é—Ç—å —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.

//? –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä ‚Äì —Ü–µ —Ä–µ–∞–∫—Ç–∏–≤–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —Ç–æ–±—Ç–æ –π–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤ —Å—Ç–∞–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ó–∞–∑–≤–∏—á–∞–π —Ü–µ –±—É–ª–µ–≤–∏–π –ø—Ä–∞–ø–æ—Ä–µ—Ü—å:

//* true ‚Äì –∑–∞–ø–∏—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è
//* false ‚Äì –∑–∞–ø–∏—Ç—É –Ω–µ–º–∞—î –∞–±–æ –≤—ñ–Ω —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–≤—Å—è

// function App() {
//   const handleOrder = (data: string) => {
//     console.log('Order resived form:', data);
//   };

//   const [articles, setArticles] = useState<Article[]>([]);
//   //* 1. –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
//   const [isLoading, setIsLoading] = useState<boolean>(false);

//   const handleSearch = async (topic: string) => {
//     //* 2. –∑–º—ñ–Ω—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞ true –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
//     setIsLoading(true);
//     const response = await axios.get<ArticlesHttpResponse>(
//       `https://hn.algolia.com/api/v1/search?query=${topic}`
//     );
//     //* 3. –ó–º—ñ–Ω—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞ false –ø—ñ—Å–ª—è –∑–∞–ø–∏—Ç—É
//     setIsLoading(false);
//     console.log(response.data);
//     setArticles(response.data.hits);
//   };

//   return (
//     <>
//       <Form />
//       <hr />
//       <hr />
//       <hr />
//       <FormActions />
//       <hr />
//       <hr />
//       <hr />
//       <h1>Place you order</h1>
//       <OrderForm onSubmit={handleOrder} />
//       <hr />
//       <hr />
//       <hr />
//       <SearchForm onSubmit={handleSearch} />
//       {/* 4. –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ JSX */}
//       {isLoading && <p>Loading data, please wait...</p>}
//       {articles.length > 0 && <ArticleList items={articles} />}
//       {isLoading && <p>Loading data, please wait...</p>}
//       {articles.length > 0 && <ArticleList items={articles} />}
//     </>
//   );
// }

//* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–∂–µ –±—É—Ç–∏ –±—É–¥—å-—á–∏–º: –ø—Ä–æ—Å—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º, —ñ–∫–æ–Ω–∫–æ—é —Ç–æ—â–æ. –û–¥–Ω–∞ –∑ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫ ‚Äì React Loader Spinner, —è–∫–∞ –Ω–∞–¥–∞—î –¥–µ—Å—è—Ç–∫–∏ –≥–æ—Ç–æ–≤–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —ñ–∑ —Ä—ñ–∑–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º.
//! üß† –ó–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É–π—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ, —â–æ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —Ü–µ —Ç—Ä–∏–≤–∞—î –º–µ–Ω—à–µ —Å–µ–∫—É–Ω–¥–∏ ‚Äì —Ü–µ –ø–æ–∫—Ä–∞—â—É—î UX.

//! –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫

//? HTTP-–∑–∞–ø–∏—Ç–∏ –º–æ–∂—É—Ç—å –∑–∞–≤–µ—Ä—à—É–≤–∞—Ç–∏—Å—è –Ω–µ—É—Å–ø—ñ—à–Ω–æ ‚Äì –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∞–±–æ –ø–æ–º–∏–ª–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ. –¢–æ–º—É –∑–∞–≤–∂–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑—É–º—ñ–≤, —â–æ —Å—Ç–∞–ª–æ—Å—è.

//* –î–ª—è —Ü—å–æ–≥–æ:

//* - –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω isError –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏.
//* - –û–±–≥–æ—Ä—Ç–∞—î–º–æ –∑–∞–ø–∏—Ç —É try...catch, —â–æ–± –ø–µ—Ä–µ—Ö–æ–ø–∏—Ç–∏ –º–æ–∂–ª–∏–≤—É –ø–æ–º–∏–ª–∫—É.
//* –í–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è isError —Ü–µ true.

// function App() {
//   const handleOrder = (data: string) => {
//     console.log('Order resived form:', data);
//   };

//   const [articles, setArticles] = useState<Article[]>([]);

//   const [isLoading, setIsLoading] = useState<boolean>(false);

//   //* 1. –û–≥–æ–ª–æ—à—É—î–º–æ —Å—Ç–∞–Ω
//   const [isError, setIsError] = useState(false);

//   const handleSearch = async (topic: string) => {
//     //* 2. –î–æ–¥–∞—î–º–æ –±–ª–æ–∫ try...catch
//     try {
//       setIsLoading(true);
//       //* 3. –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø–æ–º–∏–ª–∫–∏ –≤ false –ø–µ—Ä–µ–¥ –∫–æ–∂–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
//       setIsError(false);
//       setIsLoading(true);
//       const response = await axios.get<ArticlesHttpResponse>(
//         `https://hn.algolia.com/api/v1/search?query=${topic}`
//       );

//       setArticles(response.data.hits);
//     } catch {
//       //* 4. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω isError –≤ true
//       setIsError(true);
//     } finally {
//       //* 5. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω isLoading –≤ false –ø—ñ—Å–ª—è –±—É–¥—å —è–∫–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –∑–∞–ø–∏—Ç—É
//       setIsLoading(false);
//     }
//   };

//   return (
//     <>
//       <Form />
//       <hr />
//       <hr />
//       <hr />
//       <FormActions />
//       <hr />
//       <hr />
//       <hr />
//       <h1>Place you order</h1>
//       <OrderForm onSubmit={handleOrder} />
//       <hr />
//       <hr />
//       <hr />
//       <SearchForm onSubmit={handleSearch} />
//       {isLoading && <p>Loading data, please wait...</p>}
//       {/* 6. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω isError —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É */}
//       {isError && <p>Whoops, something went wrong! Please try again!</p>}
//       {articles.length > 0 && <ArticleList items={articles} />}
//     </>
//   );
// }
//? –©–æ–± –≤—Ä—É—á–Ω—É —Å–ø—Ä–æ–≤–æ–∫—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É —ñ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—î –±–ª–æ–∫ catch, –ø—Ä–æ—Å—Ç–æ –∑–ª–∞–º–∞–π—Ç–µ URL-–∑–∞–ø–∏—Ç—É: // –ù–µ–≤—ñ—Ä–Ω–∏–π endpoint ‚Äî –ø–æ–≤–µ—Ä–Ω–µ 404 `https://hn.algolia.com/api/v1/search1?query=${topic}`

//! –ü–æ–¥—ñ–ª –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ

//* –¢—Ä–∏–º–∞—Ç–∏ –∫–æ–¥ HTTP-–∑–∞–ø–∏—Ç—ñ–≤ –ø—Ä—è–º–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ ‚Äì –Ω–µ–±–∞–∂–∞–Ω–æ. –ó —á–∞—Å–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:

//* - –±—É–¥–µ –º–∞—Ç–∏ –∑–∞–π–≤—É –ª–æ–≥—ñ–∫—É –Ω–µ –ø–æ–≤‚Äô—è–∑–∞–Ω—É –∑ UI;
//* - —Å—Ç–∞–Ω–µ –≤–∞–∂—á–∏–º –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è —ñ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏;

//? –†—ñ—à–µ–Ω–Ω—è ‚Äì –≤–∏–Ω–µ—Å—Ç–∏ –∫–æ–¥ –∑–∞–ø–∏—Ç—É –≤ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ src/services/articleService.ts. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –ø–æ–≤–∏–Ω–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –π –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ, –Ω–µ —Ç—É—Ä–±—É—é—á–∏—Å—å –ø—Ä–æ –∞–¥—Ä–µ—Å—É –±–µ–∫–µ–Ω–¥—É —á–∏ —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.

//* –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é fetchArticles(topic) –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ App

function App() {
  const handleOrder = (data: string) => {
    console.log('Order resived form:', data);
  };

  const [articles, setArticles] = useState<Article[]>([]);

  const [isLoading, setIsLoading] = useState(false);

  const [isError, setIsError] = useState(false);

  const handleSearch = async (topic: string) => {
    try {
      setIsLoading(true);
      setIsError(false);
      //* 2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ HTTP-—Ñ—É–Ω–∫—Ü—ñ—é
      const data = await fetchArticles(topic);
      setArticles(data);
    } catch {
      setIsError(true);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <>
      <Form />
      <hr />
      <hr />
      <hr />
      <FormActions />
      <hr />
      <hr />
      <hr />
      <h1>Place you order</h1>
      <OrderForm onSubmit={handleOrder} />
      <hr />
      <hr />
      <hr />
      <SearchForm onSubmit={handleSearch} />
      {isLoading && <p>Loading data, please wait...</p>}
      {/* 6. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω isError —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É */}
      {isError && <p>Whoops, something went wrong! Please try again!</p>}
      {articles.length > 0 && <ArticleList items={articles} />}
    </>
  );
}

//! –ù–∞–≤—ñ—Ç—å –≤ —Ç–∞–∫–æ–º—É –ø—Ä–æ—Å—Ç–æ–º—É –≤–∏–ø–∞–¥–∫—É –º–∏ –ø—Ä–∏—Ö–æ–≤–∞–ª–∏ –≤—ñ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–¥—Ä–µ—Å—É –∑–∞–ø–∏—Ç—É, —Ç–∏–ø—ñ–∑–∞—Ü—ñ—é —Ç–∞ —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.

//* –ß–∏—Å—Ç–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ‚Äì –ø—Ä–∞—Ü—é—î –ª–∏—à–µ –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —ñ —Å—Ç–∞–Ω–æ–º.
//* –ü—Ä–æ—Å—Ç–æ—Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ ‚Äì HTTP-–ª–æ–≥—ñ–∫—É –º–æ–∂–Ω–∞ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –æ–∫—Ä–µ–º–æ.
//* –ú–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω—ñ—Å—Ç—å ‚Äì –ª–µ–≥–∫–æ –¥–æ–¥–∞—Ç–∏ —ñ–Ω—à—ñ —Å–µ—Ä–≤—ñ—Å–∏ (–Ω–∞–ø—Ä. userService, authService).

//! –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—î topic —ñ –æ—Ç—Ä–∏–º—É—î –≥–æ—Ç–æ–≤—ñ articles. –í—ñ–Ω –Ω–µ –∑–Ω–∞—î, –∑–≤—ñ–¥–∫–∏ –≤–æ–Ω–∏ –≤–∑—è–ª–∏—Å—è, —ñ —Ü–µ –¥–æ–±—Ä–µ ‚Äì —Ü–µ —ñ —î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ä–æ–∑–ø–æ–¥—ñ–ª –æ–±–æ–≤'—è–∑–∫—ñ–≤.

export default App;
